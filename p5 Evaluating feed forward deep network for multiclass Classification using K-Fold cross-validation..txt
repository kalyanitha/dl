!pip install scikeras
!pip install np_utils
import pandas
# import np_utils
from keras.models import Sequential
from keras.layers import Dense
from scikeras.wrappers import KerasClassifier
from tensorflow.keras.utils import to_categorical
# from scikeras import np_utils
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import KFold
from sklearn.preprocessing import LabelEncoder
from sklearn.pipeline import Pipeline
dataframe=pandas.read_csv("iris.data",header=None)
dataset=dataframe.values
X=dataset[:,0:4].astype(float)
Y=dataset[:,4]
encoder=LabelEncoder()
encoder.fit(Y)
encoded_Y=encoder.transform(Y)
dummy_y=to_categorical(encoded_Y)
def baseline_model():
model=Sequential()
model.add(Dense(8,input_dim=4,activation='relu'))
model.add(Dense(3,activation='softmax'))
model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])
return model
estimator=KerasClassifier(build_fn=baseline_model,epochs=200,batch_size=5,verbose=0)
kfold=KFold(n_splits=10,shuffle=True)
results=cross_val_score(estimator,X,dummy_y,cv=kfold)
print("Accuracy: %.2f%%(%.2f%%)"%(results.mean()*100,results.std()*100))